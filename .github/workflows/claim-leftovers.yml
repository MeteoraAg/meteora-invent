name: Claim DBC Bonding-Curve Leftovers

on:
  workflow_dispatch: {}          # run manually from the Actions tab
  schedule:
    - cron: "15 * * * *"         # run hourly at :15 (UTC)

concurrency:
  group: claim-dbc-leftovers
  cancel-in-progress: false

jobs:
  claim-leftovers:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    # All env pulled from repo/org Secrets (Settings → Secrets and variables → Actions)
    # REQUIRED:
    #   - RPC_URL
    #   - BASE_MINTS             (comma-separated list of base mint addresses)
    #   - DBC_CONFIG_KEYS        (comma-separated list of config keys)
    #   - LEFTOVER_RECEIVER      (Solana pubkey to receive leftovers)
    #   - one of PK_B58 or PRIVATE_KEY_B58 (wallet)
    # OPTIONAL:
    #   - DBC_PROGRAM_IDS        (comma-separated program IDs)  ← you said this is not set; that's fine
    env:
      RPC_URL: ${{ secrets.RPC_URL }}
      BASE_MINTS: ${{ secrets.BASE_MINTS }}
      DBC_CONFIG_KEYS: ${{ secrets.DBC_CONFIG_KEYS }}
      DBC_PROGRAM_IDS: ${{ secrets.DBC_PROGRAM_IDS }}
      LEFTOVER_RECEIVER: ${{ secrets.LEFTOVER_RECEIVER }}
      PK_B58: ${{ secrets.PK_B58 }}
      PRIVATE_KEY_B58: ${{ secrets.PRIVATE_KEY_B58 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Validate required secrets
        shell: bash
        run: |
          set -euo pipefail

          require() {
            local name="$1"
            if [ -z "${!name:-}" ]; then
              echo "::error title=Missing secret::$name is required but not set"
              exit 1
            fi
          }

          # Required:
          require RPC_URL
          require BASE_MINTS
          require DBC_CONFIG_KEYS
          require LEFTOVER_RECEIVER

          # Wallet: one of PK_B58 or PRIVATE_KEY_B58 must be present
          if [ -z "${PK_B58:-}" ] && [ -z "${PRIVATE_KEY_B58:-}" ]; then
            echo "::error title=Missing wallet secret::Provide PK_B58 (preferred) or PRIVATE_KEY_B58"
            exit 1
          fi

          # Optional DBC_PROGRAM_IDS — just inform if missing
          if [ -z "${DBC_PROGRAM_IDS:-}" ]; then
            echo "::notice title=Optional::DBC_PROGRAM_IDS not set; SDK defaults / script logic will be used."
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Optional typecheck — won’t fail the workflow if types complain
      - name: Typecheck (non-blocking)
        continue-on-error: true
        run: pnpm exec tsc --noEmit

      # Run the script directly via ts-node (transpile-only to avoid type issues)
      - name: Claim leftovers
        env:
          TS_NODE_TRANSPILE_ONLY: "1"
        run: pnpm dlx ts-node studio/src/scripts/dbc/claim_leftovers.ts
